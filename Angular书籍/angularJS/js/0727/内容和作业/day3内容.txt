一.循环结构   for用 得最多
A.for(初始值; 条件值; 改变值){
	如果条件值为真则执行循环体；
	执行完循环体，再改变值，继续判断条件值；
}

B.for (var in object) {
    执行的代码块
   }
 for/in 语句用于循环对象属性

例子：
var person = {fname:"John", lname:"Doe", age:25}; 

var text = "";
var x;
for (x in person) {
    text += person[x];
}


C.while(条件值){

   }

D.do{

}while(条件值)

E.break,continue语句
break 语句用于跳出循环。 break 语句跳出循环后，会继续执行该循环之后的代码
continue 用于跳过循环中的一个迭代。
continue 语句（带有或不带标签引用）只能用在for循环中。
break 语句（不带标签引用），只能用在for循环或 switch 中。
通过标签引用，break 语句可用于跳出任何 JavaScript 代码块：
// input 带有 <datalist> 中的预定义值的 <input> 元素：
//eg: <input list="a"><datalist id="a"> <option value="数学"></datalist>

二. 函数
函数是什么？
函数，就是一个一系列JavaScript语句的集合，这是为了完成某一个会重复使用的特定功能。
    在需要该功能的时候，直接调用函数即可，而不必每次都编写一大堆重复的代码。
    并且在需要修改该功能的时候，也只要修改和维护这一个函数即可。

总之，将语句集合成函数，好处就是方便代码重用。并且，一个好的函数名，可以让人一眼就知道这个函数实现的是什么功能，
    方便维护。

 函数的使用只需要2步：

 （1）定义函数；

 （2）调用函数；

1.函数的定义
前面使用了关键词 function 用于声明一个函数。 定义函数必须使用function关键字。
函数是由事件驱动的或者当它被调用时执行的可重复使用的代码块
函数声明后，我们可以在需要的时候调用。


函数常用方式有2种：

（1）不指定函数名的函数；

（2）指定函数名的函数；

“指定函数名的函数”是JavaScript中使用最广泛的方法，反而“不指定函数名的函数”用得比较少。

function 函数名称(参数){
	函数体
}
 事件调动函数  都是函数名();的形式
当您声明函数时，请把参数作为变量来声明：

2.匿名函数
var 函数名=function(参数){
函数体
}
函数可以使用return语句将某个值返回，也可以没有返回值。
参数是可选的，可以不带参数，也可以带多个参数。如果是多个参数的话，参数之间要用英文逗号隔开。

3.函数的调用
函数名（）;

4.函数的形式参数和实际参数
函数名（a,b）;
函数名（1，2）;
    何时需要定义参数：如果一个函数，必须一些数据才可正常执行
                     需要几个数据，就定义几个参数变量
    何时如何为参数变量赋值：在调用函数时
                       按照参数定义时的顺序和个数
                       依次传入参数值

5.全局变量和局部变量
var color = "red";
var aa=function(){
	console.log(color);
	var a = 5;
	console.log(a);
}
console.log(a);

6.变量的可用范围
   a.全局作用域
      可在程序的任何位置访问全局变量
   b.局部作用域
     局部变量有两种：
                   1.参数变量  这种形式function myFunction(name,job)
                   2.在函数定义中var的变量  （var x=12;）
         调用时如果局部有就不用全局的
         函数外面读不到函数内部的变量

7.【对象】补充     前面没学函数所以没讲对象的方法
对象只是带有属性和方法的特殊数据类型。
JavaScript 提供多个内建对象，比如 String、Date、Array 等等
   对象的方法定义了一个函数，并作为对象的属性存储

//内建对象  内建属性  系统自带的对象和属性即原生的


   对象方法通过添加 () 调用 (作为一个函数)
   访问对象属性的语法是： objectName.propertyName
   您可以通过这个语法调用方法： objectName.methodName()
	1.声明对象的两种方式
		方法一：直接量的方式：
		var obj = {name:"xx",age:78};

	    方法二：  定义并创建对象的实例
        var obj1 = new Object();
            obj1.name = "xx";
               		       ||   可替代成下面这个语句
            var obj1={name:"xx"}

8.栈 队列
   队列:是一种支持先进先出的集合,即先被插入的数据,先被取出!
      shift() 方法用于把数组的第一个元素从其中删除，并返回第一个元素的值。
      unshift() 方法可向数组的开头添加一个或更多元素，并返回新的长度。
   栈:是一种支持后进先出的集合,即后被插入的数据,先被取出!
      push() 方法可把它的参数顺序添加到 arrayObject 的尾部
      它直接修改 arrayObject，而不是创建一个新的数组
      pop() 方法用于删除并返回数组的最后一个元素。
预习
BOM对象
DOM对象
